--- linux-4.3.0.x86_64n/include/drm/drmP.h	2015-11-14 23:08:40.181142342 +0800
+++ linux-4.3.0.x86_64/include/drm/drmP.h	2015-11-15 02:12:00.776945343 +0800
@@ -1083,6 +1083,7 @@
 #define DRM_PCIE_SPEED_80 4
 
 extern int drm_pcie_get_speed_cap_mask(struct drm_device *dev, u32 *speed_mask);
+extern int drm_pcie_get_max_link_width(struct drm_device *dev, u32 *mlw);
 
 /* platform section */
 extern int drm_platform_init(struct drm_driver *driver, struct platform_device *platform_device);
--- linux-4.3.0.x86_64n/drivers/gpu/drm/drm_pci.c	2015-11-14 23:08:30.134142522 +0800
+++ linux-4.3.0.x86_64/drivers/gpu/drm/drm_pci.c	2015-11-15 02:11:25.638945972 +0800
@@ -403,6 +403,26 @@
 }
 EXPORT_SYMBOL(drm_pcie_get_speed_cap_mask);
 
+int drm_pcie_get_max_link_width(struct drm_device *dev, u32 *mlw)
+{
+       struct pci_dev *root;
+       u32 lnkcap;
+
+       *mlw = 0;
+       if (!dev->pdev)
+               return -EINVAL;
+
+       root = dev->pdev->bus->self;
+
+       pcie_capability_read_dword(root, PCI_EXP_LNKCAP, &lnkcap);
+
+       *mlw = (lnkcap & PCI_EXP_LNKCAP_MLW) >> 4;
+
+       DRM_INFO("probing mlw for device %x:%x = %x\n", root->vendor, root->device, lnkcap);
+       return 0;
+}
+EXPORT_SYMBOL(drm_pcie_get_max_link_width);
+
 #else
 
 int drm_pci_init(struct drm_driver *driver, struct pci_driver *pdriver)
